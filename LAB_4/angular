
Source: 
 
home.component.css 
 
    .results {     display: grid; 

    column-gap: 14px;     row-gap: 14px; 
    grid-template-columns: repeat(auto-fill, minmax(400px, 400px));     margin-top: 50px; 
    justify-content: space-around; 
  } 
   
  input[type="text"] { 
    border: solid 1px var(--primary-color);     padding: 10px;     border-radius: 8px;     margin-right: 4px;     display: inline-block; 
    width: 30%; 
  } 
   
  button {     padding: 10px;     border: solid 1px var(--primary-color);     background: var(--primary-color);     color: rgb(116, 18, 214); 
    border-radius: 8px; 
  } 
   
  @media (min-width: 500px) and (max-width: 768px) { 
    .results { 
        grid-template-columns: repeat(2, 1fr); 
    } 
    input[type="text"] { 
        width: 70%; 
    }    
  } 
   
  @media (max-width: 499px) { 
    .results {         grid-template-columns: 1fr; 
    }     
  } 
 
 
 
 
 
home.component.ts 
 
 
import { Component,inject } from '@angular/core'; import { CommonModule } from '@angular/common'; 
import { HousingLocationComponent } from '../housing-location/housinglocation.component'; import { Housinglocation } from '../housinglocation'; import { HousingService } from '../housing.service'; 
@Component({ 
   
  selector: 'app-home', 
  standalone: true, 
  imports: [CommonModule,     HousingLocationComponent], 
  template: `   <section> 
    <form> 
      <input type="text" placeholder="Filter by city"> 
      <button class="primary" type="button">Search</button>     </form> 
  </section> 
 
  <section class="results"> 
    <app-housing-location *ngFor="let housingLocation of 
housingLocationList" [housingLocation]="housingLocation"></app-housinglocation> 

  </section> 
`, 
  styleUrls: ['./home.component.css'] 
   
}) 
 
// export class HomeComponent { 
//   readonly baseUrl = 'https://angular.io/assets/images/tutorials/faa'; 
 
   
   
 
//   housingLocationList: Housinglocation[] = []; 
//   housingService: HousingService = inject(HousingService); 
   
//   constructor() { 
//     this.housingLocationList = 
this.housingService.getAllHousingLocations(); 
     
//   } 
// } 
export class HomeComponent { 
  readonly baseUrl = 'https://angular.io/assets/images/tutorials/faa'; 
 
  housingLocationList: Housinglocation[] = [ 
    {       id: 0, 
      name: 'Acme Fresh Start Housing',       city: 'Chicago',       state: 'IL', 
      photo: `${this.baseUrl}/bernard-hermant-CLKGGwIBTaY-unsplash.jpg`,       availableUnits: 4,       wifi: true, 

      laundry: true 
    },     {       id: 1, 
      name: 'A113 Transitional Housing', 
      city: 'Santa Monica',       state: 'CA', 
      photo: `${this.baseUrl}/brandon-griggs-wR11KBaB86U-unsplash.jpg`,       availableUnits: 0, 
      wifi: false, 
      laundry: true 
    },     {       id: 2, 
      name: 'Warm Beds Housing Support',       city: 'Juneau',       state: 'AK', 
      photo: `${this.baseUrl}/i-do-nothing-but-love-lAyXdl1-Wmcunsplash.jpg`,       availableUnits: 1, 
      wifi: false, 
      laundry: false 
    },     {       id: 3, 
      name: 'Homesteady Housing',       city: 'Chicago',       state: 'IL', 
      photo: `${this.baseUrl}/ian-macdonald-W8z6aiwfi1E-unsplash.jpg`,       availableUnits: 1, 
      wifi: true, 
      laundry: false 
    }, 
    { 

      id: 4, 
      name: 'Happy Homes Group', 
      city: 'Gary',       state: 'IN', 
      photo: `${this.baseUrl}/krzysztof-hepner-978RAXoXnH4-unsplash.jpg`,       availableUnits: 1, 
      wifi: true, 
      laundry: false 
    },     {       id: 5, 
      name: 'Hopeful Apartment Group',       city: 'Oakland',       state: 'CA', 
      photo: `${this.baseUrl}/r-architecture-JvQ0Q5IkeMM-unsplash.jpg`,       availableUnits: 2, 
      wifi: true, 
      laundry: true 
    },     {       id: 6, 
      name: 'Seriously Safe Towns', 
      city: 'Oakland',       state: 'CA', 
      photo: `${this.baseUrl}/phil-hearing-IYfp2Ixe9nM-unsplash.jpg`,       availableUnits: 5, 
      wifi: true, 
      laundry: true 
    },     {       id: 7, 
      name: 'Hopeful Housing Solutions',       city: 'Oakland',       state: 'CA', 
 
      photo: `${this.baseUrl}/r-architecture-GGupkreKwxA-unsplash.jpg`, 
      availableUnits: 2, 
      wifi: true, 
      laundry: true 
    },     {       id: 8, 
      name: 'Seriously Safe Towns', 
      city: 'Oakland',       state: 'CA', 
      photo: `${this.baseUrl}/saru-robert-9rP3mxf8qWI-unsplash.jpg`,       availableUnits: 10, 
      wifi: false, 
      laundry: false 
    },     {       id: 9, 
      name: 'Capital Safe Towns', 
      city: 'Portland',       state: 'OR', 
      photo: `${this.baseUrl}/webaliser-_TPTXZd9mOo-unsplash.jpg`,       availableUnits: 6, 
      wifi: true, 
      laundry: true 
    } 
  ]; 
} 
 
 
 
housing-location.component.css 
 
.listing { 
    background: var(--accent-color);     border-radius: 30px;     padding-bottom: 30px; 
  } 
  .listing-heading {     color: var(--primary-color); 
    padding: 10px 20px 0 20px; 
  } 
  .listing-photo {     height: 250px;     width: 100%;     object-fit: cover; 
    border-radius: 30px 30px 0 0; 
  } 
  .listing-location { 
    padding: 10px 20px 20px 20px; 
  } 
  .listing-location::before { 
    content: url("/assets/location-pin.svg") / ""; 
  } 
   
  section.listing a {     padding-left: 20px;     text-decoration: none; 
    color: var(--primary-color); 
  } 
  section.listing a::after {     content: "\203A";     margin-left: 5px; 
  } 
 
 
 
housing-location.component.ts 
 
import { Component, Input } from '@angular/core'; import { CommonModule } from '@angular/common'; import { Housinglocation } from '../housinglocation'; 
 
@Component({ 
  selector: 'app-housing-location',   standalone: true,   imports: [CommonModule],   template: ` 
  <section class="listing"> 
    <img class="listing-photo" [src]="housingLocation.photo" alt="Exterior photo of {{housingLocation.name}}"> 
    <h2 class="listing-heading">{{ housingLocation.name }}</h2> 
    <p class="listing-location">{{ housingLocation.city}}, 
{{housingLocation.state }}</p> 
  </section> 
  `, 
  styleUrls: ['./housing-location.component.css'] 
}) 
export class HousingLocationComponent {   @Input() housingLocation!: Housinglocation; 
 
} 
 
 
 
app-routing.module.ts 
 
import { NgModule } from '@angular/core'; 
import { RouterModule, Routes } from '@angular/router'; 
 
const routes: Routes = []; 
 
@NgModule({ 
  imports: [RouterModule.forRoot(routes)],   exports: [RouterModule] 
}) 
export class AppRoutingModule { } 
 
 
 
app.component.specs.ts 
 
import { TestBed } from '@angular/core/testing'; import { RouterTestingModule } from '@angular/router/testing'; import { AppComponent } from './app.component'; 
 
describe('AppComponent', () => { 
  beforeEach(() => TestBed.configureTestingModule({ 
    imports: [RouterTestingModule], 
    declarations: [AppComponent] 
  })); 
 
  it('should create the app', () => { 
    const fixture = TestBed.createComponent(AppComponent); 
    const app = fixture.componentInstance;     expect(app).toBeTruthy(); 
  }); 
 
  it(`should have as title 'dress'`, () => { 
    const fixture = TestBed.createComponent(AppComponent); 
    const app = fixture.componentInstance; 
    expect(app.title).toEqual('dress'); 
  }); 
 
  it('should render title', () => { 
    const fixture = TestBed.createComponent(AppComponent);     fixture.detectChanges(); 
    const compiled = fixture.nativeElement as HTMLElement;     expect(compiled.querySelector('.content span')?.textContent).toContain('dress app is running!'); 
  }); 
}); 
 
 
 
app.component.ts 
 
 
import { Component } from '@angular/core'; 
import { HomeComponent } from './home/home.component'; 
 
@Component({ 
  selector: 'app-root',   template: ` 
  <main> 
    <header class="brand-name"> 
      <img class="brand-logo" style="width: 80px;" src="/assets/Screenshot 
2023-08-13 at 11.46.00 AM.png" alt="logo" aria-hidden="true">     </header> 
    <section class="content"> 
      <app-home></app-home> 
    </section> 
  </main> 
`, 
  styleUrls: ['./app.component.css'], 
   
   }) 
export class AppComponent { 
  title = 'homes'; 
} 
 
 
app.module.ts 
 
 
import { NgModule } from '@angular/core'; 
 
import { BrowserModule } from '@angular/platform-browser'; 
 
import { AppRoutingModule } from './app-routing.module'; import { AppComponent } from './app.component'; 
import { HomeComponent } from "./home/home.component"; 
 
@NgModule({ 
    declarations: [ 
        AppComponent, 
    ], 
    providers: [], 
    bootstrap: [AppComponent],     imports: [ 
        BrowserModule, 
        AppRoutingModule, 
        HomeComponent 
    ] 
}) 
export class AppModule { } 
 
 
 
housing.service.ts 
 
import { Injectable } from '@angular/core'; 
import { Housinglocation } from './housinglocation'; 
@Injectable({   providedIn: 'root' 
}) 
export class HousingService {   housingLocationList: any; 
  getAllHousingLocations(): Housinglocation[] {     return this.housingLocationList; 
  } 
   
  getHousingLocationById(id: number): Housinglocation | undefined {     return this.housingLocationList.find((housingLocation: { id: number; }) => housingLocation.id === id); 
  } 
 
  constructor() { } 
} 
 
 
 
housinglocation.ts 
<!doctype html> 
<html lang="en"> 
<head> 
  <meta charset="utf-8"> 
  <title>Homes</title> 
  <base href="/"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="icon" type="image/x-icon" href="favicon.ico"> </head> 
 
export interface Housinglocation { 
    id: number;   name: string;   city: string;   state: string;   photo: string; 
  availableUnits: number; 
  wifi: boolean; 
  laundry: boolean; 
} 
 
 
 
index.html 
 
<body> 
  <app-root></app-root> 
</body> 
</html> 
 
 
 
main.ts 
 
import { platformBrowserDynamic } from '@angular/platform-browserdynamic'; 
 
import { AppModule } from './app/app.module'; 
 
platformBrowserDynamic().bootstrapModule(AppModule) 
  .catch(err => console.error(err)); 
 
 
 
 
